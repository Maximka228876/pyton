from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from keyboards.main import get_diseases_menu, get_back_to_diseases_keyboard
import logging

router = Router()

logger = logging.getLogger(__name__)

@router.message(F.text == "ü§í –ó–∞–±–æ–ª–µ–≤–∞–Ω–∏—è")
async def diseases_menu(message: Message):
    logger.info("–ö–Ω–æ–ø–∫–∞ '–ó–∞–±–æ–ª–µ–≤–∞–Ω–∏—è' –Ω–∞–∂–∞—Ç–∞!")
    

DISEASES_INFO = {
    "myopia": {
        "title": "üîç –ë–ª–∏–∑–æ—Ä—É–∫–æ—Å—Ç—å (–ú–∏–æ–ø–∏—è)",
        "content": "‚Ä¢ –ü—Ä–∏—á–∏–Ω—ã: –≥–µ–Ω–µ—Ç–∏–∫–∞, –¥–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –Ω–∞ –±–ª–∏–∑–∫–æ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏..."
    },
    "cataract": {
        "title": "üåÄ –ö–∞—Ç–∞—Ä–∞–∫—Ç–∞",
        "content": "‚Ä¢ –ü—Ä–∏—á–∏–Ω—ã: –≤–æ–∑—Ä–∞—Å—Ç, —Ç—Ä–∞–≤–º—ã, –¥–∏–∞–±–µ—Ç..."
    }
}

@router.message(F.text == "ü§í –ó–∞–±–æ–ª–µ–≤–∞–Ω–∏—è")  # –í–∞–∂–Ω–æ: —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é!
async def diseases_menu(message: Message):
    await message.answer(
        "üìö –í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–µ:", 
        reply_markup=get_diseases_menu()
    )

@router.callback_query(F.data.startswith("disease_"))
async def show_disease_info(callback: CallbackQuery):
    disease_key = callback.data.split("_")[1]
    disease = DISEASES_INFO.get(disease_key)
    
    text = f"<b>{disease['title']}</b>\n\n{disease['content']}"
    await callback.message.edit_text(
        text,
        parse_mode="HTML",
        reply_markup=get_back_to_diseases_keyboard()
    )
    await callback.answer()

@router.callback_query(F.data == "back_diseases")
async def back_to_diseases_menu(callback: CallbackQuery):
    await callback.message.edit_text(
        "üìö –í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–µ:",
        reply_markup=get_diseases_menu()
    )
    await callback.answer()
